Project description;

==^=^==>>
1- select one scrum master for  ==> host meeting, do organization
		-cannot be group lead
		
2- Select Product Owner who can provide prioritize user stories, 
which one should be done first, decided.

3- Rest of team are testers, will estimate each user story based on;
--Effort
--Complexity
--Doubt

4- After estimation,team will process the following: 
-discuss and move user stories from product backlog to Sprint backlog

analyze the user story and AC(acceptance criteria), 
and come up with different scenarios, create test case, prepare test data, 
execution(takes less than an hour).//not done

==^=^==>>Example user story;

as a team lead, a room can be reserved and team members can view it on the application UI;
reserved room can be cancelled or? Reservation can be done only for 1 day!

==^=^==>> Example planning

2 weeks : 10 days - 2 days (lunch,meeting)= 8 working days.
4 members: 4*8 32 points ==> team capacity
Velocity = total number of points for all user stories in sprint backlog


***if story points more than 10 points, split the user story, or two members work on that story
**give points 1-10
==^=^==>>
who responsible acceptance criteria PO? 
BA and product owner



==^=^==>>Team lead; who
manage team, assign task, create docs like test plan, daily report, regression report
assign tasks to each members.


==^=^==>>User stories;
I want to join/cancel prime membership and that way I can choose fast shipping option when I want.

As a user, I want to make and edit my own wish list at amazon.com, that way I can buy/view items any time.

As a user, I want to view my orders by filtering them with last 30 days 
or more also with "open orders", "digital orders", ""

As a user, I want to...


==^=^==>>What is increment?

--> Some feature added or increased at the end of sprint.
--> Each piece or increment represents a complete subset of 


==^=^==>> deliver increment of functionality from Product backlog is;

---> the job of team; They are Scrum master, Product owner and Development team
Dev team consist of developers, business analysts and testers , 
and data based architecture(DBA) who has access to entire database.

==^=^==>> Sprint Retrospective meeting;

--> facilitated by Scrum Master;
--> what went well? What did not go well? How to improve?
--> facilitates team's search on improvements in the retrospective meeting
--> Responsible to remove impediments


==^=^==>> team communicates impediments, SM help you find the solution.

==^=^==>> Daily Scrum meeting

--> Duration of the meeting depends on the total number of participants
--> Team communicates impediments in a daily scrum meeting

==^=^==>> Product owner responsibilities;

--> Prioritize the requirements
--> maintains product backlog/ ensures backlog is clear
--> Ordering, sorting user stories 
--> Decides on the release date
--> Represent stakeholders or customers
--> Adjusts features and priority on every iteration as needed.
--> Accept/Reject work results if PO is not satisfied
--> optimize the value of work which development  team performs
--> Ensures the delivery of the product
--> take care of financial resources in a project.

--> 

==^=^==>> Sprint review meeting lasts 4 hours maximum in a cycle of 30 days

--> Time box: 

--> Sprint : 2 - 4 weeks

--> 4 week sprint; Sprint planning meeting: 8 hours= 2 hours per(4) week;

--> 2 week sprint; Sprint planning meeting: 4 hours= 2 hours per(2) week;

--> 4 week sprint; Sprint retrospective meeting: 3 hours 

--> 2 week sprint; Sprint retrospective meeting: 1.5 hours 


==^=^==>> onece a team starts a sprint, who determines how to the team works?
--> team determines how they will work on the project.


==^=^==>>Burndown chart: // not all companies use this chart

--> is a chart used commonly in stand-up meetings to access how much work completed,
--> gives us a rough idea how well we do in a current sprint.



==^=^==>> The development team, known as self-managing team;

--> responsible to hire or assign a new person into a team.

--> Dev team decides how the two parts of team will work;
these two parts are developer team and tester team, and 
-->both developer and tester teams have their own team leads.

==^=^==>> Definition of Done is;

--> ready to be released into production;
--> Peer review complete
--> Testing complete, code recorded/submitted, 
--> Story documented in Jira - that is an Agile tool
--> 

==^=^==>> Agile manifesto

--> 4 values; choosing the meanings of words before over :)

--> 1- Individuals and interactions over process and tools
--> 2- Working software over comprehensive documentation
--> 3- Customer collaboration over contract negotiation
--> 4- Responding to change over following a plan

--> 12 principles

--> 1- Our highest priority is to satisfy customer through early and
	   continous delivery of valuable software.
	   
--> 2- Welcome changing requirements, even late in development.
	   Agile processes harness change for the customer's competitive advantage
	   
--> 3- Deliver working software frequently, from a couple weeks to a couple of months,
	   with a preference to the shorter time scale
	   
--> 4- Business people and developers must work together daily throughout the project

--> 5- Build projects around motivated individuals. Give them the environment and 
	   support their need, and trust them to get the job done.
	   
--> 6- The most efficient and effective method of conveying information to and within
	   a development team is face-to-face conversation
	   
--> 7- Working software is the primary measure of progress

--> 8- Agile processes promote sustainable development. The sponsors, developers and 
	   users should be able to maintain a constant pace indefinitely.
	    
--> 9- Continuous attention to technical excellence and good design enhances agility.
	   

--> 10- The best architectures, requirements, and designs emerge from self-organizing teams.

--> 11- At regular intervals, the team reflects on how to become more effective, 
        then tunes and adjusts its behavior accordingly.
--> 12- Simplicity--the art of maximizing the amount of work not done--is essential.


==^=^==>> 


==^=^==>>



==^=^==>>



==^=^==>>



==^=^==>>









